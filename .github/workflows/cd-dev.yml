name: cd dev

on:
  pull_request:
    branches: [ "develop" ]
    types: [closed]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SUBMODULE_TOKEN }}
          submodules: true
        
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
  
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Copy application.yml
        run: |
          cp ./server-config/*.yml ./src/main/resources/
          cp ./server-config/application-test.yml ./src/test/resources/application.yml
        
      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Copy jar file
        run: mv ./build/libs/*SNAPSHOT.jar ./photopic-dev.jar
        
      - name: (SCP) transfer build file 
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AWS_EC2_URL_DEV }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_KEY }}
          source: photopic-dev.jar
          target: /home/${{ secrets.AWS_EC2_USER }}

      - name: (SSH) connect EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_EC2_URL_DEV }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_KEY }}
          script_stop: true
          script: |
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar -Dspring.profiles.active=dev photopic-dev.jar > ./output.log 2>&1 &
